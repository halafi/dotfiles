{
  "workbench.startupEditor": "none",
  "security.workspace.trust.untrustedFiles": "open",
  "svelte.enable-ts-plugin": true,
  "projectManager.git.baseFolders": ["~/Projects"],
  "git.autofetch": true,
  "git.confirmSync": false,
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "settingsSync.ignoredSettings": ["-window.zoomLevel"],
  "files.hotExit": "onExitAndWindowClose",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "terminal.integrated.defaultProfile.osx": "fish",
  "terminal.integrated.profiles.osx": {
    "fish": {
      "path": "/opt/homebrew/bin/fish",
      "args": ["-l"]
    },
    "tmux-shell": {
      "path": "tmux",
      "args": ["new-session", "-A", "-s", "vscode:${workspaceFolder}"]
    }
  },
  "window.autoDetectColorScheme": true,
  "window.restoreWindows": "preserve",
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "explorer.confirmDragAndDrop": false,
  "git.rememberPostCommitCommand": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "vim.replaceWithRegister": true,
  "vim.camelCaseMotion.enable": true,
  "vim.highlightedyank.enable": true,
  "vim.hlsearch": true,
  "vim.easymotion": true,
  "vim.leader": " ",
  "vim.useSystemClipboard": true,
  "vim.visualstar": true,
  "vim.operatorPendingModeKeyBindingsNonRecursive": [
    // rebind camelCase motion
    {
      "before": ["i", "v"],
      "after": ["i", "<leader>", "w"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["<C-r>"],
      "commands": ["redo"]
    },
    {
      "before": [":"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "g", "c"],
      "commands": ["git.checkout"]
    },
    {
      "before": ["<leader>", "g", "m"],
      "commands": ["git.merge"]
    },
    {
      "before": ["<leader>", "g", "l"],
      "commands": ["git.pull"]
    },
    {
      "before": ["<leader>", "g", "P"],
      "commands": ["git.push"]
    },
    {
      "before": ["<leader>", "g", "d"],
      "commands": ["references-view.findReferences"]
    },
    {
      "before": ["<leader>", "g", "a", "a"],
      "commands": ["git.stageAll"]
    },
    {
      "before": [
        "<leader>",
        "r" // refactor - rename
      ],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "t", "r"],
      "commands": ["code-runner.stop", "code-runner.run"]
    },
    {
      "before": ["w"],
      "after": ["<leader>", "w"]
    },
    {
      "before": ["b"],
      "after": ["<leader>", "b"]
    },
    {
      "before": ["e"],
      "after": ["<leader>", "e"]
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["editor.action.formatDocument", "eslint.executeAutofix"]
    },
    {
      "before": [
        // "<leader>",
        "<c-w>",
        "v"
      ],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": [
        // "<leader>",
        "<c-w>",
        "h"
      ],
      "commands": ["workbench.action.splitEditorDown"]
    },
    // {
    //     "before": [
    //         "<leader>",
    //         "w",
    //         "q"
    //     ],
    //     "commands": [
    //         "workbench.action.closeActiveEditor"
    //     ]
    // },
    {
      "before": ["<leader>", "<C-n>"],
      "commands": ["workbench.action.files.revealActiveFileInWindows"]
    },
    {
      "before": ["<C-n>"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "m"],
      "commands": ["editor.action.toggleMinimap"]
    },
    // vim-cutlass implementation
    {
      "before": ["D"],
      "after": ["\"", "_", "D"]
    },
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["d", "d"],
      "after": ["\"", "_", "d", "d"]
    },
    {
      "before": ["c"],
      "after": ["\"", "_", "c"]
    },
    {
      "before": ["C"],
      "after": ["\"", "_", "C"]
    },
    {
      "before": ["c", "c"],
      "after": ["\"", "_", "c", "c"]
    },
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["X"],
      "after": ["\"", "_", "X"]
    },
    // "move"/"cut" remap
    {
      "before": ["m"],
      "after": ["d"]
    },
    {
      "before": ["m", "m"],
      "after": ["d", "d"]
    },
    {
      "before": ["M"],
      "after": ["D"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "5"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    // easymotion -- seems better than sneak
    {
      "before": ["s"],
      "after": ["leader", "leader", "s"]
    },
    {
      "before": ["S"],
      "after": ["leader", "leader", "leader", "b", "d", "j", "k"]
    },
    // replace with register
    {
      "before": ["l"],
      "after": ["g", "r"]
    },
    // {
    //     "before": [":"],
    //     "commands": [
    //         "workbench.action.showCommands",
    //     ],
    //     "silent": true
    // },
    // TODO: fix
    // {
    //     "before": ["M", "K"],
    //     "after": ["editor.action.moveLinesDownAction"]
    //     "after": ["editor.action.moveLinesUpAction"]
    // },
    {
      "before": ["]", "f"],
      "commands": ["search.action.focusNextSearchResult"]
    },
    {
      "before": ["[", "f"],
      "commands": ["search.action.focusPreviousSearchResult"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["leader", "b", "d"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["leader", "b", "D"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["]", "b"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["]", "B"],
      "commands": ["workbench.action.lastEditorInGroup"]
    },
    {
      "before": ["[", "B"],
      "commands": ["workbench.action.firstEditorInGroup"]
    },
    {
      "before": ["[", "b"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["]", "c"],
      "commands": [
        "workbench.action.editor.nextChange"
        // "editor.action.dirtydiff.next",
      ]
    },
    {
      "before": ["[", "c"],
      "commands": [
        "workbench.action.editor.previousChange"
        // "editor.action.dirtydiff.previous",
      ]
    },
    {
      "before": ["]", "n"],
      "commands": [
        "merge-conflict.next"
        // "editor.action.dirtydiff.next",
      ]
    },
    // conflict markers https://github.com/rhysd/conflict-marker.vim
    {
      "before": ["[", "n"],
      "commands": ["merge-conflict.previous"]
    },
    {
      "before": ["[", "n"],
      "commands": ["merge-conflict.previous"]
    },
    {
      "before": ["m", "c", "b"],
      "commands": ["merge-conflict.accept.both"]
    },
    {
      "before": ["m", "c", "t"],
      "commands": ["merge-conflict.accept.incoming"]
    },
    {
      "before": ["m", "c", "o"],
      "commands": ["merge-conflict.accept.current"]
    },
    // testing
    {
      "before": ["leader", "t", "h"],
      "commands": ["extension.runJest"]
    },
    {
      "before": ["leader", "t", "f"],
      "commands": ["extension.runJestFile"]
    },
    {
      "before": ["leader", "t", "w"],
      "commands": ["extension.runJestFileWithWatchMode"]
    },
    {
      "before": ["leader", "h", "p"],
      "commands": ["editor.action.dirtydiff.next"]
    },
    {
      "before": ["leader", "h", "h"],
      "commands": ["closeQuickDiff"]
    },
    {
      "before": ["leader", "h", "s"],
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["leader", "h", "r"],
      "commands": [
        "git.revertSelectedRanges" // fix
        // "git.revertChange",
      ]
    },
    // zz after n / N
    {
      "before": ["n"],
      "after": ["n", "z", "z"]
    },
    {
      "before": ["N"],
      "after": ["N", "z", "z"]
    },
    // bookmarks
    {
      "before": ["g", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["g", "M"],
      "commands": ["bookmarksExplorer.focus"]
    },
    {
      "before": ["`", "m"],
      "commands": ["bookmarks.list"]
    },
    {
      "before": ["'", "m"],
      "commands": ["bookmarks.list"]
    },
    // other
    {
      "before": ["enter"],
      "commands": [
        // "workbench.action.files.save",
        "workbench.action.files.saveWithoutFormatting"
      ]
    },
    {
      "before": ["leader", "f", "s"],
      "commands": ["workbench.view.search.focus"]
    },
    // how do I work with git these days?
    // mainly in files with hunks ]c [c hp hr etc
    // sourcetree to search in file history text changes
    {
      "before": ["leader", "f", "g"],
      "commands": ["workbench.view.scm"]
    },
    // git-graph.view -- git log with easy to find diffs in recent changes
    {
      "before": ["leader", "f", "l"],
      "commands": ["git-graph.view"]
    },
    // git.viewFileHistory -- don't like this one much
    // best file history I got but can't do search by text
    {
      "before": ["leader", "f", "h"],
      "commands": ["gitlens.showFileHistoryView"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusActiveEditorGroup"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // kinda the same as P - replace with register
    {
      "before": ["="],
      "after": ["g", "r"]
    },
    {
      "before": ["p"],
      "after": ["P"]
    },
    // cutlass
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["c"],
      "after": ["\"", "_", "c"]
    },
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["m"],
      "after": ["d"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "editor.smoothScrolling": true,
  "zenMode.hideLineNumbers": false,
  "workbench.activityBar.iconClickBehavior": "focus",
  "editor.bracketPairColorization.enabled": true,
  "editor.cursorSurroundingLines": 4,
  "window.nativeTabs": true,
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "window.nativeFullScreen": false,
  "editor.accessibilitySupport": "off",
  "eslint.format.enable": true,
  "eslint.probe": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "vue",
    "markdown",
    "svelte"
  ],
  "window.titleBarStyle": "native",
  "window.customTitleBarVisibility": "never",
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.colorTheme": "Default Dark+",
  "vim.sneakReplacesF": true,
  "vim.sneak": true,
  "vim.easymotionKeys": "hlyuiopnm,.qwertzxcvbasdgjf",
  "explorer.confirmPasteNative": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "extensions.ignoreRecommendations": true,
  "editor.formatOnSave": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
    "*.sqlite": "${capture}.${extname}-*",
    "*.db": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*"
  },
  "playwright.reuseBrowser": false,
  "redhat.telemetry.enabled": false,
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "git.allowForcePush": true,
  "terminal.integrated.lineHeight": 1.15,
  "editor.fontFamily": "FiraCode Nerd Font, Menlo, Monaco, 'Courier New', monospace",
  "workbench.preferredDarkColorTheme": "Default Dark+",
  "editor.lineHeight": 1.2,
  "telemetry.telemetryLevel": "off",
  "editor.fontSize": 14,
  "editor.stickyScroll.maxLineCount": 3,
  "editor.minimap.enabled": false
}
