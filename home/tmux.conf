unbind C-b
set -g prefix C-a
set -g mouse on
set -g history-limit 100000
set -g set-titles on
set -g renumber-windows on
# rename with prefix ,
# don't rename windows automatically
# set-option -g allow-rename off
setw -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "
set -g base-index 1
setw -g pane-base-index 1
set -s extended-keys always
set -g default-terminal "xterm-256color"
# set -a terminal-overrides ",alacritty:RGB"
# set -g default-terminal "iterm"


bind-key [ swap-window -d -t -1
bind-key ] swap-window -d -t +1

unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

unbind v
unbind h
unbind l #last
unbind p #previous

unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"

# ctrl
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# navigate between windows
bind -n M-h previous-window
bind -n M-l next-window
bind-key h previous-window
bind-key j previous-window
bind-key k next-window
bind-key l next-window

# bind-key h split-window -v -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key t split-window -v -p 30 -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key c new-window -a -c "#{pane_current_path}"
bind-key p display-popup -d "#{pane_current_path}"

# toggle status bar
bind-key T set-option status

# vi mode
# prefix key -> [ enters copy mode
set -g status-keys vi
set-window-option -g mode-keys vi
bind-key Space copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi d send -X halfpage-down
bind-key -T copy-mode-vi u send -X halfpage-up

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'jaclu/tmux-menus' # actions menu
set -g @plugin 'halafi/tmux-colours-vscode'
# set -g @tmux-gruvbox 'dark' # or 'light'

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, weather
# set -g @dracula-plugins "git time"
# set -g @dracula-show-powerline false
# set -g @dracula-show-left-icon smiley
# set -g @dracula-border-contrast false
# set -g @dracula-show-fahrenheit false
# set -g @dracula-show-timezone true
# set -g @dracula-border-contrast false

# bottom line
run '~/.tmux/plugins/tpm/tpm'
