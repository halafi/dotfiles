set hidden true
set ignorecase true
set icons true

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d

# Basic Functions
# execute current file (must be executable)
map x $$f
map X !$f
map . set hidden!
map DD delete
map dd delete
map r push :rename<space>
map <enter> open
#map R reload
map mf mkfile
map md mkdir
map C clear

# Movement
map gd cd ~/Documents
map gD cd ~/Downloads
map gP cd ~/Desktop
map gp cd ~/Projects
map gt cd ~/Projects/top
map gc cd ~/.config
map gC cd ~/Projects/dotfiles
map gh cd ~
